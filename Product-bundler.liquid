<section id="main-bundle" class="bundle-page">
  <div class="section-first section-item first-column">

    
    <div class="bundle-product-images">
      <img src="{{ section.settings.product_bundle_images_01 | image_url}}" alt="product bundle image" />
      <img src="{{ section.settings.product_bundle_images_02 | image_url}}" alt="product bundle image" />
      <img src="{{ section.settings.product_bundle_images_03 | image_url}}" alt="product bundle image" />
      <img src="{{ section.settings.product_bundle_images_04 | image_url}}" alt="product bundle image" />
    </div>

    <div class="bundle-products" data-free-product-id="{% if section.settings.free-bundle-product.variants.first %}{{ section.settings.free-bundle-product.variants.first.id }}{% else %}{{ section.settings.free-bundle-product.id }}{% endif %}"
       data-free-product-imgSrc="{{ section.settings.free-bundle-product.images.first | image_url}}">
      {% for product in section.settings.bundle_products %}
        {% if product.variants[1]%}
          {% if product.variants[1].inventory_quantity > 0%}
            <div class="bundle-product">
              <div class="slection-image-container">
                <img class="slection-image" src="{{ product.images[1] | image_url }}" alt="{{ product.title }}" class="bundle-product-img">
              </div>
              <h3 class="bundle-product-title">{{ product.title }}</h3>
              <div class="bundle-product-quantity-selector">
                <button class="btn-minus" onclick="decreaseQuantity(event)">
                  <svg width="13" height="2" viewBox="0 0 13 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0.5 1C0.5 0.447715 1.03726 0 1.7 0H11.3C11.9627 0 12.5 0.447715 12.5 1C12.5 1.55228 11.9627 2 11.3 2H1.7C1.03726 2 0.5 1.55228 0.5 1Z" fill="black"/>
                  </svg>
                </button>
                <input type="number" id="bundle-product-quantity" value="0" max="5" data-product-id="{{ product.variants[1].id }}" data-img-src="{{ product.images[1] | image_url }}" alt="{{ product.title }}"/>
                <button class="btn-plus" onclick="increaseQuantity(event)">
                  <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M7.49996 0.142822C7.97335 0.142822 8.35711 0.526578 8.35711 0.999965V6.14282H13.5C13.9734 6.14282 14.3571 6.52658 14.3571 6.99996C14.3571 7.47335 13.9734 7.85711 13.5 7.85711H8.35711V13C8.35711 13.4734 7.97335 13.8571 7.49996 13.8571C7.02658 13.8571 6.64282 13.4734 6.64282 13V7.85711H1.49997C1.02658 7.85711 0.642822 7.47335 0.642822 6.99996C0.642822 6.52658 1.02658 6.14282 1.49997 6.14282H6.64282V0.999965C6.64282 0.526578 7.02658 0.142822 7.49996 0.142822Z" fill="black"/>
                  </svg>
                </button>
              </div>
             <a href="{{ product.url }}"><img src="https://cdn.shopify.com/s/files/1/0163/9586/2080/files/Group_1_1.png?v=1733136075" class="to-product-page-btn" /></a>
            </div>
          {% endif %}
      {% elsif product.variants[0]%}
        {% if product.variants[0].inventory_quantity > 0 %}
          <div class="bundle-product">
            <div class="slection-image-container">
              <img class="slection-image" src="{{ product.images.first | image_url }}" alt="{{ product.title }}" class="bundle-product-img">
            </div>
            <h3 class="bundle-product-title">{{ product.title }}</h3>
            <div class="bundle-product-quantity-selector">
              <button class="btn-minus" onclick="decreaseQuantity(event)">
                <svg width="13" height="2" viewBox="0 0 13 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0.5 1C0.5 0.447715 1.03726 0 1.7 0H11.3C11.9627 0 12.5 0.447715 12.5 1C12.5 1.55228 11.9627 2 11.3 2H1.7C1.03726 2 0.5 1.55228 0.5 1Z" fill="black"/>
                </svg>
              </button>
              <input type="number" id="bundle-product-quantity" value="0" max="5" data-product-id="{{ product.variants[0].id }}" data-img-src="{{ product.images.first | image_url }}" alt="{{ product.title }}"/>
              <button class="btn-plus" onclick="increaseQuantity(event)">
                <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7.49996 0.142822C7.97335 0.142822 8.35711 0.526578 8.35711 0.999965V6.14282H13.5C13.9734 6.14282 14.3571 6.52658 14.3571 6.99996C14.3571 7.47335 13.9734 7.85711 13.5 7.85711H8.35711V13C8.35711 13.4734 7.97335 13.8571 7.49996 13.8571C7.02658 13.8571 6.64282 13.4734 6.64282 13V7.85711H1.49997C1.02658 7.85711 0.642822 7.47335 0.642822 6.99996C0.642822 6.52658 1.02658 6.14282 1.49997 6.14282H6.64282V0.999965C6.64282 0.526578 7.02658 0.142822 7.49996 0.142822Z" fill="black"/>
                </svg>
              </button>
            </div>
           <a href="{{ product.url }}"><img src="https://cdn.shopify.com/s/files/1/0163/9586/2080/files/Group_1_1.png?v=1733136075" class="to-product-page-btn" /></a>
          </div>  
          {% endif %}
      {% elsif product %}
        {% if product.inventory_quantity > 0  %}
          <div class="bundle-product">
            <div class="slection-image-container">
              <img class="slection-image" src="{{ product.images.first | image_url }}" alt="{{ product.title }}" class="bundle-product-img">
            </div>
            <h3 class="bundle-product-title">{{ product.title }}</h3>
            <div class="bundle-product-quantity-selector">
              <button class="btn-minus" onclick="decreaseQuantity(event)">
                <svg width="13" height="2" viewBox="0 0 13 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0.5 1C0.5 0.447715 1.03726 0 1.7 0H11.3C11.9627 0 12.5 0.447715 12.5 1C12.5 1.55228 11.9627 2 11.3 2H1.7C1.03726 2 0.5 1.55228 0.5 1Z" fill="black"/>
                </svg>
              </button>
              <input type="number" id="bundle-product-quantity" value="0" max="5" data-product-id="{{ product.id }}" data-img-src="{{ product.images.first | image_url }}" alt="{{ product.title }}"/>
              <button class="btn-plus" onclick="increaseQuantity(event)">
                <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7.49996 0.142822C7.97335 0.142822 8.35711 0.526578 8.35711 0.999965V6.14282H13.5C13.9734 6.14282 14.3571 6.52658 14.3571 6.99996C14.3571 7.47335 13.9734 7.85711 13.5 7.85711H8.35711V13C8.35711 13.4734 7.97335 13.8571 7.49996 13.8571C7.02658 13.8571 6.64282 13.4734 6.64282 13V7.85711H1.49997C1.02658 7.85711 0.642822 7.47335 0.642822 6.99996C0.642822 6.52658 1.02658 6.14282 1.49997 6.14282H6.64282V0.999965C6.64282 0.526578 7.02658 0.142822 7.49996 0.142822Z" fill="black"/>
                </svg>
              </button>
            </div>
           <a href="{{ product.url }}"><img src="https://cdn.shopify.com/s/files/1/0163/9586/2080/files/Group_1_1.png?v=1733136075" class="to-product-page-btn" /></a>
          </div>  
        {% endif %}
      {% endif %}
      {% endfor %}
    </div>

    <div class="hover-badge">
      <img src="https://cdn.shopify.com/s/files/1/0163/9586/2080/files/Group_71.png?v=1732879433" alt="" />
    </div>
    
  </div>

  
  <div class="section-second section-item second-column">
    <div class="sticky-header">
    <h2 class="bundle-page-title">{{ section.settings.bundle_page_title }} <span class="bundle-discount">{{ section.settings.bundle_discount }}</span></h2>
    <p class="bundle-page-slogan">{{ section.settings.bundle_page-slogan }}</p>

    <div class="offer-ball">
      <img src="https://cdn.shopify.com/s/files/1/0163/9586/2080/files/Group_67.jpg?v=1732545725" alt="offer ball" />

      {% assign ball_offer_text = section.settings.bundle_ball-offer | split: "||" %}
      <p class="ball-offer-text">{{  ball_offer_text[0] }}<br>{{ ball_offer_text[1] }}</p>
    </div>

    <div class="bundle-selected-products">
      {% for i in (1..6) %}
        <div class="bundle-selected-product-container" >
          <div class="bundle-selected-product">
            <!-- selected products will go in here -->
            <img class="selected-product-img" src="" data-product-id="" data-img-src=""/>
            <img src="https://cdn.shopify.com/s/files/1/0163/9586/2080/files/iconamoon_close-fill.png?v=1733130288" data-product-num="{{ i }}" data-product-id="" class="delete-icon"/>
          </div>
          <p class="product-container-number">{{ i }}</p>
        </div>
      {% endfor %}
    </div>

    <button class="bundle-buy-button add-to-cart sf__btn" onclick="addProductBundle(event)">Your Bundle Needs <span>6</span> Items</button>
      </div>
    
    <div class="bundle-info">

      <div class="points">
        <!-- have next line with out any indentation -->
        {% assign points = section.settings.bundle_points | split: ",,
" %}
        {% for point in points  %}
        <p class="point">
          <svg width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M27.1075 17.8644C26.7988 16.6317 26.101 15.078 25.0174 14.0282C24.1534 13.1764 23.236 12.8074 22.5382 12.6995C21.8346 12.5915 21.3506 12.7355 21.1309 12.8374C21.3031 12.9064 21.4813 12.9574 21.6743 13.0594C22.948 13.7043 24.1356 14.808 24.8897 15.7378C25.3291 16.2687 25.6438 16.7366 25.8457 17.0456L25.7745 17.1026C25.4504 16.6747 25.1055 16.2633 24.7412 15.8698C23.9366 14.988 22.7401 13.9802 21.5169 13.3653C21.505 13.3563 21.4842 13.3533 21.4664 13.3413C21.3328 13.2783 21.1844 13.2124 21.0359 13.1434L20.9736 13.1164H20.9795C20.1601 12.7625 19.1565 12.4085 18.444 12.2556C23.7051 10.6749 24.1682 8.15541 24.4414 6.70071C24.8392 4.59514 23.5091 1.8777 21.22 0.557976C19.4534 -0.455814 17.1525 -0.0239036 15.9916 1.33482C15.3443 2.09966 15.2523 3.21843 15.5047 4.07625C15.7066 4.72712 15.9886 5.04505 16.3063 5.34499C16.3063 5.34499 16.3211 5.36898 16.3449 5.38098C16.6299 5.63593 16.9031 5.7859 17.0901 5.86388C17.8413 6.29279 18.9131 6.69471 19.1922 5.73791C19.3169 5.34199 18.6637 4.72112 17.871 4.99706C17.2267 5.22801 16.9149 5.21002 16.5112 5.03905C15.4215 4.41818 15.4868 2.18964 16.2766 1.45179C17.7433 0.0810748 19.9641 0.321025 20.837 0.824921C22.8589 1.98868 24.2781 4.67613 24.0168 6.53274C23.8208 7.92745 23.2835 10.333 17.9422 11.8147C15.4779 12.2856 12.7138 11.6797 10.0506 10.048C9.55181 9.70609 8.81846 9.06122 8.47703 8.05043C8.32561 7.60652 8.2692 7.12962 8.29295 6.63172C8.39686 6.46376 8.53938 6.2748 8.75908 6.04684C9.11536 5.69292 9.30241 5.53695 9.45383 5.22201C9.59337 4.92207 9.59931 4.53216 9.52806 4.15123C9.43008 3.64134 9.46274 3.26642 9.47758 3.12545C9.49243 2.98747 9.39148 2.97848 9.35585 3.02647C9.12724 3.3354 8.30779 4.49616 8.00496 5.81589C7.8476 6.51775 7.8565 7.18961 8.00792 7.81948C8.03168 7.93945 8.07027 8.06243 8.10887 8.1854C8.20091 8.46134 8.32561 8.70429 8.45921 8.92925C7.74071 8.45235 6.57686 7.80748 5.16065 7.47755C4.73905 7.37557 4.35902 7.2376 4.01758 7.07263C3.9196 7.01864 3.81569 6.96465 3.71177 6.88967C2.91608 6.31679 2.23024 5.45297 1.81458 4.74211C1.57409 4.3312 1.40189 3.98027 1.30391 3.75532L1.35438 3.72532C1.47314 3.94728 1.66316 4.28321 1.92443 4.67013C2.38166 5.35099 3.08234 6.16082 3.84835 6.70671C3.96117 6.79069 4.03836 6.81468 4.15712 6.85668C4.10368 6.68571 4.03836 6.47875 3.8721 6.09783C3.69693 5.71391 3.45941 5.264 3.05859 4.73611C2.56574 4.07625 1.91849 3.3474 1.42267 2.72053C0.914971 2.09666 0.555721 1.58676 0.555721 1.58976C0.55869 1.58676 0.448837 2.19864 0.534938 3.07146C0.612132 3.92628 0.923878 5.06305 1.5444 5.88488C2.04022 6.54774 2.62215 6.89567 3.08828 7.04264C3.1922 7.07563 3.28721 7.09663 3.38221 7.11462C3.61677 7.26459 3.94039 7.46555 4.16009 7.56153C4.169 7.55853 4.169 7.56453 4.17197 7.56753C4.44512 7.6875 4.74796 7.78348 5.07158 7.86447C6.10182 8.09842 6.99549 8.52133 7.67836 8.91425C5.00329 8.07442 3.18329 9.1542 2.23024 10.003C0.517124 11.5417 -0.343888 14.2172 0.128184 16.2087C0.190533 16.4667 0.276634 16.7156 0.389457 16.9466C1.36923 18.9982 3.5752 20.1469 5.87618 19.979C11.4104 19.562 9.61713 14.7151 6.72234 15.2969C6.59765 15.3239 6.47295 15.3509 6.79954 15.5009C7.32208 15.7198 7.99605 17.1086 7.2538 18.1763C6.6214 19.0702 5.32097 19.5291 4.17197 19.3251C2.62215 19.0192 1.31876 18.0264 0.745737 16.7756C-0.12715 14.907 0.671512 11.9346 2.49745 10.288C3.60489 9.29817 6.00682 7.97245 9.69135 10.285C11.069 11.1518 12.506 11.7817 13.9192 12.1506L13.9073 12.1536C14.5308 12.3725 14.9821 12.9124 15.089 13.5633C15.2101 13.2838 15.4005 13.0406 15.6418 12.8572C15.8831 12.6738 16.1672 12.5565 16.4666 12.5165C16.722 12.4865 16.8467 12.5135 16.9268 12.5105C17.9897 12.5435 19.2308 12.7325 20.4837 13.2334C20.8667 13.3713 20.9201 13.4043 21.2408 13.5933C21.3477 13.7852 21.4753 14.0012 21.6297 14.2411C21.9563 14.754 22.3987 15.3419 23.0934 16.0288C23.9634 16.8656 25.0589 17.7654 25.917 18.5663C26.7809 19.3521 27.4074 20.006 27.4074 20C27.3955 20.006 27.4163 19.0971 27.1075 17.8644Z" fill="black"/>
          </svg>
            {{ point }}
        </p>
        {% endfor %}
      </div>


      {% assign titles = section.settings.bundle_accordian_titles | split: ",,
" %}
      {% assign contents = section.settings.bundle_accordian_texts | split: ",,
" %}
      
      <div class="bundle-info-accordion">
        {% for title in titles %}
            <div class="bundle-accordion-item">
              <button class="accordion-title">
                {{ title }}
                <svg class="minus" width="13" height="2" viewBox="0 0 13 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0.5 1C0.5 0.447715 1.03726 0 1.7 0H11.3C11.9627 0 12.5 0.447715 12.5 1C12.5 1.55228 11.9627 2 11.3 2H1.7C1.03726 2 0.5 1.55228 0.5 1Z" fill="black"></path>
                </svg>
                <svg class="svg-visible plus" width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7.49996 0.142822C7.97335 0.142822 8.35711 0.526578 8.35711 0.999965V6.14282H13.5C13.9734 6.14282 14.3571 6.52658 14.3571 6.99996C14.3571 7.47335 13.9734 7.85711 13.5 7.85711H8.35711V13C8.35711 13.4734 7.97335 13.8571 7.49996 13.8571C7.02658 13.8571 6.64282 13.4734 6.64282 13V7.85711H1.49997C1.02658 7.85711 0.642822 7.47335 0.642822 6.99996C0.642822 6.52658 1.02658 6.14282 1.49997 6.14282H6.64282V0.999965C6.64282 0.526578 7.02658 0.142822 7.49996 0.142822Z" fill="black"></path>
                </svg>
              </button>
              <div class="accordion-content">
                <p>{{ contents[forloop.index0] }}</p>
              </div>
            </div>
        {% endfor %}
      </div>
            

      <div class="bundle-bottom-icons-texts">

        {% assign bottom_titles = section.settings.bundle_bottom_info_titles | split: ",,
" %}
        {% assign bottom_texts = section.settings.bundle_bottom_info_texts | split: ",,
" %}
        {% for title in bottom_titles %}
          <div class="bottom-icon-text-item">
            <div class="img-container">
              <img src="{% if forloop.index0 == 0 %} {{ section.settings.product_bundle_info_images_01 | image_url }} {% elsif forloop.index0 == 1 %} {{ section.settings.product_bundle_info_images_02 | image_url }} {% else %} {{ section.settings.product_bundle_info_images_03 | image_url }} {% endif %}" alt="" class="{% if forloop.index0 == 2 %}large{% endif %}">
            </div>
            <p class="bottom-title">{{ title }}</p>
            <p class="bottom-text">{{ bottom_texts[forloop.index0] }}</p>
          </div>
        {% endfor %}        
      </div>

    </div>
    
  </div>

  
</section>

<style>
.sticky-header {
  position: static; /* Default behavior */
  z-index: 10;
  background-color: white;
  transition: all 0.3s ease; /* Smooth transitions */
}

.sticky-header.sticky {
  position: sticky;
  top: 0; /* Sticks to the top */
}

.sticky-header.stopped {
  position: absolute;
  bottom: 0; /* Fix to the bottom of its container */
}

  
</style>
              
<script>
 document.addEventListener("DOMContentLoaded", () => {
  const stickyHeader = document.querySelector(".sticky-header");
  const bundleInfo = document.querySelector(".bundle-info");
  const section = document.querySelector(".section-second.section-item.second-column");
  const sectionRect = section.getBoundingClientRect(); // Get initial position of the section

  // Function to update sticky behavior
  const updateSticky = () => {
    if(window.innerWidth > 768){
      const bundleInfoRect = bundleInfo.getBoundingClientRect();
      const windowHeight = window.innerHeight;
  
      // Scroll down: Make header sticky when .bundle-info is out of view and blank space exists
      if (bundleInfoRect.bottom <= 0 && sectionRect.bottom > windowHeight) {
        stickyHeader.classList.add("sticky");
        stickyHeader.classList.remove("stopped");
      } 
      // Scroll up: Stop sticky when blank space ends (i.e., section bottom is visible)
      else if (sectionRect.bottom <= windowHeight && bundleInfoRect.top <= windowHeight) {
        stickyHeader.classList.remove("sticky");
        stickyHeader.classList.add("stopped");
      } 
      // Remove sticky if the user scrolls up and bundle-info becomes visible again
      else if (bundleInfoRect.top >= 0) {
        stickyHeader.classList.remove("sticky", "stopped");
      }
    }
  };

  // Attach the scroll event listener
  window.addEventListener("scroll", updateSticky);
});


</script>


    <!-- {
      "type": "product",
      "id": "free-bundle-product",
      "label": "Select a Free Product for Bundle."
    },
    -->

{% schema %}
{
  "name": "Main Bundle",
  "settings": [
     {
      "type": "text",
      "id": "discount-code",
      "label": "Enter Discount Code."
    },
    {
      "type": "image_picker",
      "id": "product_bundle_images_01",
      "label": "Select Product Bundle Image 1"
    },
    {
      "type": "image_picker",
      "id": "product_bundle_images_02",
      "label": "Select Product Bundle Image 2"
    },
    {
      "type": "image_picker",
      "id": "product_bundle_images_03",
      "label": "Select Product Bundle Image 3"
    },
    {
      "type": "image_picker",
      "id": "product_bundle_images_04",
      "label": "Select Product Bundle Image 4"
    },
    {
      "type": "product_list",
      "id": "bundle_products",
      "label": "Select Products for Bundle"
    },
    {
      "type": "text",
      "id": "bundle_page_title",
      "label": "Write Page Title"
    },
    {
      "type": "text",
      "id": "bundle_discount",
      "label": "Enter Discount"
    },
    {
      "type": "text",
      "id": "bundle_page-slogan",
      "label": "Write Page Slogan"
    },
    {
      "type": "text",
      "id": "bundle_ball-offer",
      "label": "Write Offer For Ball",
      "info": "Place (||), to break text."
    },
    {
      "type": "textarea",
      "id": "bundle_points",
      "label": "Enter Points For Bundle",
      "info": "Seperate points by (,,) and a new line."
    },
    {
      "type": "textarea",
      "id": "bundle_accordian_titles",
      "label": "Enter Titles For Bundle-Accordian",
      "info": "Seperate Titles by (,,) and a new line."
    },
    {
      "type": "textarea",
      "id": "bundle_accordian_texts",
      "label": "Enter Text's for corresponding Accordian-Titles",
      "info": "Seperate Text's by (,,) and a new line."
    },
    {
      "type": "image_picker",
      "id": "product_bundle_info_images_01",
      "label": "Select Product Bundle-Info Image 1"
    },
    {
      "type": "image_picker",
      "id": "product_bundle_info_images_02",
      "label": "Select Product Bundle-Info Image 2"
    },
    {
      "type": "image_picker",
      "id": "product_bundle_info_images_03",
      "label": "Select Product Bundle-Info Image 3"
    },
    {
      "type": "textarea",
      "id": "bundle_bottom_info_titles",
      "label": "Enter Text's for corresponding Bundle-bottom Titles",
      "info": "Seperate Text's by (,,) and a new line."
    },
    {
      "type": "textarea",
      "id": "bundle_bottom_info_texts",
      "label": "Enter Text's for corresponding Bundle-bottom Texts",
      "info": "Seperate Text's by (,,) and a new line."
    },
  ],
  "presets": [
    {
      "name": "Main Bundle"
    }
  ]
}
{% endschema %}


<script>

// APPLYING DISCOUNT TO PRODUCTS BOUGHT ONLY FROM THIS PAGE
fetch('/discount/{{section.settings.discount-code}}')


const increaseQuantity = (e) => {
  const quantityInput = e.target.closest("button").previousElementSibling;
  // max val machenism can be implemented here.
  quantityInput.value = parseInt(quantityInput.value) + 1;
  const changeEvent = new Event("change", { bubbles: true, cancelable: true });
  quantityInput.dispatchEvent(changeEvent);
}

const decreaseQuantity = (e) => {
  const quantityInput = e.target.closest("button").nextElementSibling;
  if (quantityInput.value > 0) {
    quantityInput.value = parseInt(quantityInput.value) - 1;
    const changeEvent = new Event("change", { bubbles: true, cancelable: true });
    quantityInput.dispatchEvent(changeEvent);
  }
}

// code for accordian
const items = document.querySelectorAll('.bundle-info-accordion .accordion-title');
items.forEach(item => {
  item.addEventListener('click', function () {

    const itemSvgs = item.querySelectorAll("svg")

    document.querySelectorAll(".bundle-info-accordion .accordion-title svg").forEach(svg=>{
      if(itemSvgs[0] == svg || itemSvgs[1] == svg){
        svg.classList.toggle("svg-visible")
      }else{
        if(svg.classList.contains("minus")) svg.classList.remove("svg-visible")
        if(svg.classList.contains("plus")) svg.classList.add("svg-visible")
      }
    })
    const content = this.nextElementSibling;
    const allContent = document.querySelectorAll('.bundle-info-accordion .accordion-content');
    allContent.forEach(c => {
      if (c !== content) c.style.display = 'none';
    });
    content.style.display = content.style.display === 'block' ? 'none' : 'block';
  });
});

// creating and adding bundle
// const freeProduct = document.querySelector("#main-bundle .bundle-products")
// const freeProductId = freeProduct?.getAttribute('data-free-product-id')
// const freeProductImgSrc = freeProduct?.getAttribute('data-free-product-imgSrc')
const bundleBuybuttonQuanText = document.querySelector(".bundle-buy-button")
const plusBtns = document.querySelectorAll(".bundle-product-quantity-selector .btn-plus")
const productInputs = document.querySelectorAll("#bundle-product-quantity")
const selectedProductContainers = document.querySelectorAll(".bundle-selected-product .selected-product-img")
const productDeleteBtns = document.querySelectorAll(".bundle-selected-product .delete-icon")
let selectedProducts = []
let totalSelectedProductsQuan = 0
let disabled=false

productInputs.forEach(inp=>{
  inp.addEventListener("change",(e)=>{
  
    const productQuan = e.target.value;
    const productId = e.target.getAttribute("data-product-id")
    const imgSrc = e.target.getAttribute("data-img-src")

    let elementDeleted = false;
  
    selectedProducts = selectedProducts.filter(product => {
      const shouldRemove = 
        (product.id == productId && productQuan != 0 && productQuan < product.quantity) ||
        (e.target.value == "0" && product.id == productId);
    
      if (shouldRemove) elementDeleted = true;
      return !shouldRemove; // Keep elements that do not match the condition
    });

    if(!elementDeleted) {
      // for products that are not in data, adds them
      selectedProducts.push({
        id: productId,
        quantity: productQuan,
        imgSrc: imgSrc
      });
    }
  
    //calculating total Qunatity
    totalSelectedProductsQuan = selectedProducts.reduce((total, product) => total + Number(product.quantity), 0);
    bundleBuybuttonQuanText.textContent = 6 - selectedProducts.length == 6 ? "Your Bundle Needs 6 Items" : 6 - selectedProducts.length == 0 ? `Your Bundle is Ready` : `Your Bundle Needs ${6 - selectedProducts.length} More Items`

    //limiting the quantity to 6
    enableDisableQuanBtns()

    // adding images on-to selected images section
    updateSelectedProductsImgSrc()
  })
})

// delete products using cross icon
productDeleteBtns.forEach(btn=>{
  btn.addEventListener("click",(e)=>{
    const productToDeleteIndex = e.target.getAttribute("data-product-num");
    const productToDeleteId = e.target.getAttribute("data-product-id");
    selectedProducts.splice(productToDeleteIndex-1,1)
    updateSelectedProductsImgSrc()

    // synchronising inputs value with product selection
    productInputs.forEach(inp=>{
      if(inp.getAttribute("data-product-id") == productToDeleteId){
        inp.value = inp.value - 1 <= 0 ? 0 : inp.value - 1 
      }
    })
    //updating the quantity-buttons state
    enableDisableQuanBtns()
    // update buy-button state
    bundleBuybuttonQuanText.textContent = 6 - selectedProducts.length == 6 ? "Your Bundle Needs 6 Items" : 6 - selectedProducts.length == 0 ? `Your Bundle is Ready` : `Your Bundle Needs ${6 - selectedProducts.length} More Items`
    
  })
})
// let freeProductAdded = false

// const addFreeProduct = () => {
//   selectedProducts.push({id:freeProductId,qunatity:1,imgSrc:freeProductImgSrc})
//   freeProductAdded = true
// }
// const removeFreeProduct = () => {
//   selectedProducts = selectedProducts.filter((product)=>product.id != freeProductId)
//   freeProductAdded = false
//   updateSelectedProductsImgSrc()
//   bundleBuybuttonQuanText.textContent = 5 - selectedProducts.length == 5 ? "Your Bundle Needs 5 Items" : 5 - selectedProducts.length == 0 ? `Your Bundle is Ready` : `Your Bundle Needs ${5 - selectedProducts.length} More Items`
// }

  
const updateSelectedProductsImgSrc = () => {
  for(let i = 0; i < 6; i++){
    if(selectedProducts[i]){
      selectedProductContainers[i].src = `${selectedProducts[i].imgSrc}`
      selectedProductContainers[i].nextElementSibling.classList.add("show")
      selectedProductContainers[i].nextElementSibling.setAttribute("data-product-id",selectedProducts[i].id)
    }else{
      selectedProductContainers[i].src = ''
      selectedProductContainers[i].nextElementSibling.classList.remove("show") 
      selectedProductContainers[i].nextElementSibling.setAttribute("data-product-id","")
    }
  }
}

const enableDisableQuanBtns = () => {
  // adding free Product
  // if(selectedProducts.length == 5 && !freeProductAdded) addFreeProduct()
  // if(selectedProducts.length <= 5 && freeProductAdded) removeFreeProduct()
  if(selectedProducts.length == 6){
    plusBtns.forEach(btn=>{
      btn.disabled=true
      disabled = true;
    })
  }else if(selectedProducts.length < 6 && selectedProducts.length > 4 && disabled == true){
    plusBtns.forEach(btn=>{
      btn.disabled=false;
      disabled=false;
    })

  }
}

// buy-buttons logic
const addProductBundle = () => {
  if (selectedProducts.length == 6){

    // Update all quantities to 1
    selectedProducts.forEach(product => {
      product.quantity = 1;
    });
    
    const consolidatedProducts = selectedProducts.reduce((acc, product) => {
      const existingProduct = acc.find(item => item.id === product.id);
    
      if (existingProduct) {
        existingProduct.quantity += Number(product.quantity);
      } else {
        acc.push({ ...product });
      }
    
      return acc;
    }, []);
  
    const simplifiedProducts = consolidatedProducts.map(product => ({
      id: String(product.id).replace(/\s+/g, ""),
      quantity: product.quantity,
    }));
  
    // add simplifiedProducts to cart
    addToCart(simplifiedProducts)
  }
}



// Function to add items to Shopify cart
async function addToCart(products) {
  bundleBuybuttonQuanText.textContent = 'Adding...'
  try {
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ items: products })
    })
      .then((res)=>{
        return res.json();
      })
      .then(async(line_item)=>{
        // OPEN CART DRAWER AND HAVE IT UPDATED
        try {

          // getting cart dependecies form app.min.js (refresh and update)
          const MinimogEvents = window.MinimogEvents
          const MinimogTheme = window.MinimogTheme || {};
          const Shopify = window.Shopify || {};

          
          const { Cart } = MinimogTheme;
          MinimogEvents.emit('ON_ITEM_ADDED', line_item);
      
          if (Cart) {
            await Cart.refreshCart();
      
            if (line_item) { 
              await Cart.renderNewCart();
              Cart.openCartDrawer();
              MinimogTheme.Notification.show({
                target: Cart.domNodes?.cartDrawerItems,
                method: 'prepend',
                type: 'success',
                message: MinimogStrings.itemAdded,
                delay: 400
              });
            }
            await Shopify.onCartUpdate(Cart.cart, false);

            // removing selected items after adding on-to cart & reseting UI
            selectedProducts.length = 0
            updateSelectedProductsImgSrc()
            productInputs.forEach((inp,idx)=>{
              console.log("on")
              plusBtns[idx].disabled = false
              return inp.value = 0
            })
            bundleBuybuttonQuanText.textContent = 'Your Bundle Needs 6 Items'
            
          }
        } catch (err) {
          console.error(`Failed to execute Shopify.onItemAdded()`, err);
          bundleBuybuttonQuanText.textContent = 'Your Bundle Needs 6 Items'
          
        }
      })
  } catch (error) {
      console.error('Failed to add items to cart:', error);
      alert('Failed to add products to cart.');
      bundleBuybuttonQuanText.textContent = 'Your Bundle Needs 6 Items'
    
  }
}

</script>





<style>
  /* solves extra space on right of page */
  .sf-menu-logo-bar,
  .sf-footer__accordion{
    width:100vw;
  }
  #main-bundle {
    display: grid;
    grid-template-columns: 50.5% 46.5%; 
    gap: 0rem;
    width: 100vw;
    overflow-x: clip;
    grid-template-areas: 
        "col1 col2"; 
    font-family: SF-Heading-font;
}
  .section-item{
    margin: 3rem 1rem 2rem 3rem;
  }
  .section-first{
  }
  .section-second{
    position:relative
  }
  .bundle-product-images {
    display: grid;
    grid-template-columns: repeat(2, 1fr); 
  }
  
  .bundle-product-images img {
    width: 100%; 
    height: auto; 
  }
  .bundle-products{
    display: grid;
    grid-template-columns: repeat(3, 1fr); 
    gap: 15px;
  }
  .bundle-products .bundle-product{
    position:relative;
    margin-top: 20px;
  }
  .bundle-products .bundle-product .slection-image{
    height: 175px;
  }
.bundle-products .bundle-product-title {
    font-size: 16px;
    text-align: center;
    height: 50px;
}

  

.bundle-product-quantity-selector {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  width: 100px;
  border: 1px solid black;
  margin-top: 10px;
  margin: 10px auto 0;
}

.bundle-product-quantity-selector button {
  background: none;
  border: none;
  font-size: 22px;
  cursor: pointer;
  line-height: 1;
  font-weight: bold;
}

/* .bundle-product-quantity-selector button:focus {
  outline: none;
} */

.bundle-product-quantity-selector input {
  width: 40px;
  text-align: center;
  border: none;
  font-size: 16px;
  font-family: inherit;
  padding:4px;
}

/* .bundle-product-quantity-selector input:focus {
  outline: none;
} */

  .bundle-page-title{
    width:77%;
    font-size:40px;
  }
  .bundle-page-title .bundle-discount{
    color: #FDB74F;
  }
  .bundle-page-slogan{
    font-size: 18px;
    margin-top: 10px;
    font-family: "Mulish", sans-serif;
    font-weight: 400;
  }
  .offer-ball {
    width: 130px;
    position: absolute;
    top: -10px;
    right: -10px;
}
  .ball-offer-text {
    text-align: center;
    font-size: 16px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-43%, -60%);
    font-weight:600;
    width:100%
}
  .bundle-selected-products{
    display: grid;
    grid-template-columns: repeat(3, 1fr); 
    gap:.8rem;
    margin: 2rem 0rem 0 0rem;
  }
  .bundle-selected-product-container{
    border:1px dashed black !important;
    aspect-ratio: 4/4;
    position:relative;
    align-content: center;
    justify-items: center;
  }

  .product-container-number {
    text-align: center;
    font-family: 'Mulish';
  }
  .bundle-selected-product{
    position:absolute;
    width:100%;
    height:100%;
    top:0;
  }
  .bundle-buy-button{
    text-align: center;
    color: white;
    background: #212121;
    margin-top: 2rem;
    padding: 14px;
    width: 100%;
    font-size:18px;
    font-family: 'Mulish';
    font-weight:400;
    text-transform:capitalize;
  }
  .bundle-info{
    margin-top: 2rem;
    background: #F7F3F0;
    padding: 10px 20px 30px 20px;
  }
  .bundle-info .points .point{
    display: flex;
    font-size: 20px;
    gap: 14px;
    align-items: center;
    margin-top: 20px;
    font-family: SF-Heading-font;
    font-weight:600;
  }

  .bundle-info-accordion {
    margin-top:2rem;
    border-top: 2px solid;
  }
  .bundle-accordion-item {
    border-bottom: 2px solid; padding: 25px 0;
  }
  .accordion-title {
    padding: 0px 0;
    width: 100%;
    text-align: left;
    border: none;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
  }
  .accordion-title svg{
    display:none;
    min-width: 20px;
  }
  .accordion-title .svg-visible{
    display:block;
  }
  .accordion-content {
    display: none;
    padding: 13px 0;
    font-size:16px;
    font-family: 'Mulish';
  }
  .accordion-title:focus {
    outline: none;
  }
  .bundle-bottom-icons-texts{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap:20px;
    margin-top:2rem;
  }
  .bottom-icon-text-item{
    display: flex;
    flex-flow: column;
    align-items: center;
  }
  .bottom-icon-text-item .img-container{
    height:44px
  }
  .bottom-icon-text-item img{
    width:45px;
  }
  .bottom-icon-text-item img.large {
    width: 80px;
  }

  .bottom-icon-text-item .bottom-title{
    font-size: 18px;
    font-weight: bold;
    margin-top: 16px;
    text-align:center;
  }
  .bottom-icon-text-item .bottom-text{
    text-align: center;
    font-size: 16px;
    font-family: "Mulish"; max-width:80%; 
  }
  .section-first {
    position: relative;
  }
  .hover-badge{
    width: 130px;
    position: absolute;
    top: 0;
    left: 0;
    transform: translate(-30%, -30%);
  }
  .bundle-selected-product .delete-icon {
    width: 20px;
    right: 0;
    position: absolute;
    top: 0;
    transform: translate(40%, -40%);
    display:none;
  }
  .bundle-selected-product .delete-icon.show {
    display:block;
  }
  .to-product-page-btn{
    position: absolute;
    top: 10px;
    right: 10px;
    width: 30px;
  }
  .img-2{
    display:none;
  }
  .slection-image-container{
    height: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .bundle-products .bundle-product .slection-image {
    height:auto;
    max-width:170px;
  }


  @media (max-width:1187px){
    .bundle-products {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  @media (max-width:1100px){
   .offer-ball {
      width: 100px;
    } 
    .ball-offer-text {
      font-size: 12px;
    }
    .bottom-icon-text-item .bottom-title {
      font-size: 15px;
    }
    .bottom-icon-text-item .bottom-text {
      font-size: 12px;
    }
  }
  @media (max-width:980px){
    .bottom-icon-text-item .bottom-title {
      height: 46px;
    }
    .bundle-products .bundle-product-title {
      font-size: 14px;
    }
    .bundle-products .bundle-product-title {
      height: 58px;
    }
  }
  @media (max-width:820px){
    .bundle-page-title {
      width: 72%;
    }
    .bundle-bottom-icons-texts {
      gap: 5px;
    }
    .bottom-icon-text-item .bottom-text {
      font-size: 11px;
    }
    .bundle-product-quantity-selector {
      width: 82px;
    }
  }
  @media (max-width:900px){
    .section-item {
      margin: 3rem 1rem 2rem 1.5rem;
    }
    .hover-badge {
      width:90px;
    }
    .bundle-page-title {
      font-size: 30px;
    }
    .bundle-page-slogan {
      font-family: "Mulish", sans-serif;
    font-weight: 400;
    font-size: 16px;
    color: #000000;
    }
    .bundle-buy-button {
      font-family: "Mulish", sans-serif;
    font-weight: 400;
    font-size: 16px;
    }
    .bundle-info .points .point,
    .accordion-title{
      font-size: 16px;
    }
    .accordion-content {
      font-size: 14px;
    }
    .bottom-icon-text-item .bottom-title{
      font-size:15px;
    }
    .bottom-icon-text-item .bottom-text {
      font-size: 13px;
    }
    
  }

  /* Media query for screens smaller than 768px */
@media (max-width: 768px) {
    #main-bundle {
        grid-template-columns: 1fr; 
        grid-template-areas: 
            "col2"
            "col1";
    }
  .slection-image-container{
    height: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .bundle-products .bundle-product .slection-image {
    height:auto
  }
  .offer-ball {
    display: none;
  }
  .bundle-selected-products{
    margin: 1.8rem 1rem 0 1rem;
  }
  .bundle-page-title {
    text-align: center;
    width: 84%;
    margin-left: auto;
    margin-right: auto;
  }
  .bundle-page-slogan {
    text-align: center;
    width: 81%;
    margin-left: auto;
    margin-right: auto;
  }
  .hover-badge {
    width: 80px;
  }
  .section-item {
    margin: 39px 0rem 2rem 0rem;
  }
  .hover-badge {
    transform: translate(-20%, -45%);
  }
  .bundle-buy-button {
    width: 94%;
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
  .section-first{
    margin: 0px 1rem 2rem 1rem;
  }
  #images-and-points {
    flex-flow: column;
    display: flex;
    justify-content: center;
    align-items: center;
}
  #images-and-points .images {
    padding: 1rem;
    width:100%;
  }
  #images-and-points .images {
    display: grid;
    grid-template-columns: repeat( 3 , 1fr );
    gap: 1rem;
    width: 50%;
    padding: 3rem 1.5rem 4rem 3rem;
  }
  .img-2{
    display:block;
  }
  .img-1{
    display:none;
  }
}
@media (max-width: 500px) {
  .bundle-buy-button {
    font-family: "Mulish", sans-serif;
    font-weight: 400;
    font-size: 16px;
    width: 92%;
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
  .bundle-info .points .point, .accordion-title {
    font-size: 14px;
  }
  .accordion-title {
    padding: 0px 0;
  }
  .bundle-accordion-item {
    border-bottom: 2px solid;
    padding: 15px 0;
}
  .accordion-content {
    padding: 3px 0 10px;
    width: 94%;
  }
    .bottom-icon-text-item img {
    width: 34px;
  }
  .bottom-icon-text-item img.large {
    width: 60px;
  }
  .bottom-icon-text-item .bottom-title {
    font-size: 13px;
  }
  .bottom-icon-text-item .bottom-title {
    height: 23px;
    font-size: 13px;
  }
  .bottom-icon-text-item .bottom-text {
    font-size: 11px;
  }
  .bundle-products {
    grid-template-columns: repeat(2, 1fr);
  }
  .bundle-products .bundle-product .slection-image {
    height: auto;
    max-width:130px;
  }
  .bundle-product-quantity-selector {
    width: 85%;
  }
  #images-and-points .images {
    gap: 9px !important; 
  }
}
@media (max-width: 420px) {
  .bundle-page-title {
    font-size: 24px;
  }
  .bottom-icon-text-item .img-container {
    height: 28px;
  }
  #images-and-points .images {
    gap: 9px;
  }
}
@media (max-width: 390px) {
  .bottom-icon-text-item .bottom-title {
    height: 35px;
  }
  #images-and-points .images {
    gap: 9px;
  }
}
@media (max-width: 364px) {
  .bundle-buy-button {
    width: 90%;
  }
}
#main-bundle .first-column {
    grid-area: col1;
}

#main-bundle .second-column {
    grid-area: col2;
}
  
</style>
